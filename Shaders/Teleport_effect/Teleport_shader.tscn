[gd_scene load_steps=7 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Shaders/Teleport_effect/Teleport_shader.gd" type="Script" id=2]

[sub_resource type="Shader" id=3]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/teleport-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float progress : hint_range(0.0, 1.0);
uniform float noise_desnity = 60;
uniform float beam_size : hint_range(0.01, 0.15);
uniform vec4 color : hint_color = vec4(0.0, 1.02, 1.2, 1.0);

// We are generating our own noise here. You could experiment with the 
// built in SimplexNoise or your own noise texture for other effects.
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

void fragment()
{
	vec4 tex = texture(TEXTURE, UV);
	
	float noise = noise(UV * noise_desnity) * UV.y;
	
	float d1 = step(progress, noise);
	float d2 = step(progress - beam_size, noise);
	
	vec3 beam = vec3(d2 - d1) * color.rgb;
	
	tex.rgb += beam;
	tex.a *= d2;
	
	COLOR = tex;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 3 )
shader_param/progress = 0.093
shader_param/noise_desnity = 150.0
shader_param/beam_size = 0.01
shader_param/color = Color( 0.054902, 0.356863, 0.411765, 1 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 31.0223, 32.7017 )

[sub_resource type="Animation" id=5]
resource_name = "teleport_shader"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/ColorRect:material")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ SubResource( 2 ), SubResource( 2 ), SubResource( 2 ) ]
}

[node name="Node2D" type="Node2D"]
script = ExtResource( 2 )

[node name="ColorRect" type="ColorRect" parent="."]
margin_top = 0.235962
margin_right = 1020.0
margin_bottom = 600.236
color = Color( 0.211765, 0.211765, 0.211765, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 526.897, 472.238 )
texture = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="Sprite"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -38.0
margin_top = -57.0
margin_right = -28.0
margin_bottom = -32.0
color = Color( 0.415686, 0.85098, 0.984314, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Area2D" type="Area2D" parent="Sprite"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Sprite/Area2D"]
shape = SubResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/teleport_shader = SubResource( 5 )

[connection signal="mouse_entered" from="Sprite/Area2D" to="." method="_on_Area2D_mouse_entered"]
[connection signal="mouse_exited" from="Sprite/Area2D" to="." method="_on_Area2D_mouse_exited"]
