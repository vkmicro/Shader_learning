[gd_scene load_steps=24 format=2]

[ext_resource path="res://Shaders/MyShaders/Learning_shading_3.gd" type="Script" id=1]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

void fragment(){
	COLOR = vec4(UV.x, 0.3, 0.7, 1.0);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

void fragment(){
	COLOR = vec4(UV.x, 0.7, 0.2, 1.0);
		//can replace any r,g,b, or even alpha values with UV.x or UV.y and get a gradient in any direction
		
		//In the above code we normalize the coordinate of the fragment by dividing it by the
			//total resolution of the billboard. By doing this the values will go between 0.0 and 1.0,		
				//which makes it easy to map the X and Y values to the RED and GREEN channel.

}
"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

void fragment(){
	COLOR = vec4(1.0, UV.y, 1.0, 0.5);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
	COLOR = vec4(0.6, UV.y, 0.9, 0.9);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
	COLOR = vec4(0.9, UV.y, UV.x, 0.9);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
	COLOR = vec4(UV.x, UV.y, UV.x, 0.8);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )

[sub_resource type="Shader" id=15]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
	COLOR = vec4(abs(cos(TIME)) + UV.x, UV.y, UV.x, 0.8);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
//	COLOR = vec4(abs(cos(TIME)) + UV.x, 0.0, 0.0, 0.8);
	COLOR = vec4(1.0, abs(cos(TIME)) + 0.0 + UV.y, 0.9, 0.8);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )

[sub_resource type="Shader" id=19]
code = "shader_type canvas_item;

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
//	COLOR = vec4(abs(cos(TIME)) + UV.x, 0.0, 0.0, 0.8);
	COLOR = vec4(1.0, abs(cos(TIME)) + 0.5 + UV.y, 0.9, 1.0);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=20]
shader = SubResource( 19 )

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;

uniform vec2 mouse_pos = vec2(0.0, 0.0);
//float dist = distance(SCREEN_UV, mouse_pos);

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
//	COLOR = vec4(abs(cos(TIME)) + UV.x, 0.0, 0.0, 0.8);
//	COLOR = vec4(1.0, abs(cos(TIME)) + 0.5 + UV.y, 0.9, 1.0);
	COLOR = vec4(mouse_pos, 1.0, 1.0);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=22]
shader = SubResource( 21 )
shader_param/mouse_pos = Vector2( 0, 0 )

[sub_resource type="Shader" id=23]
code = "shader_type canvas_item;

uniform vec2 mouse_pos = vec2(0.0, 0.0);
//float dist = distance(SCREEN_UV, mouse_pos);

void fragment(){ //gradient where r, g, b, alpha
					//but you replace either r,g, or b with x or y coordinates so you end up with a gradient 
//	COLOR = vec4(abs(cos(TIME)) + UV.x, 0.0, 0.0, 0.8);
//	COLOR = vec4(1.0, abs(cos(TIME)) + 0.5 + UV.y, 0.9, 1.0);
	COLOR = vec4(1.0, mouse_pos , 1.0);
//	COLOR = vec4(0.2, 0.7, 0.6, 1.0);
	
}
"

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 23 )
shader_param/mouse_pos = Vector2( 0, 0 )

[node name="MyShader_3" type="Node2D"]
script = ExtResource( 1 )

[node name="Background" type="ColorRect" parent="."]
margin_right = 1051.0
margin_bottom = 719.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader" type="ColorRect" parent="."]
material = SubResource( 6 )
margin_left = 6.72073
margin_top = -84.9601
margin_right = 263.721
margin_bottom = 156.04
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader2" type="ColorRect" parent="."]
material = SubResource( 4 )
margin_left = 272.328
margin_top = -98.1296
margin_right = 529.328
margin_bottom = 142.87
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader3" type="ColorRect" parent="."]
material = SubResource( 8 )
margin_left = 538.17
margin_top = -97.018
margin_right = 795.17
margin_bottom = 143.982
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader4" type="ColorRect" parent="."]
material = SubResource( 10 )
margin_left = 808.502
margin_top = -107.781
margin_right = 1065.5
margin_bottom = 133.219
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader5" type="ColorRect" parent="."]
material = SubResource( 12 )
margin_left = -12.0928
margin_top = 153.541
margin_right = 244.907
margin_bottom = 394.541
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader6" type="ColorRect" parent="."]
material = SubResource( 14 )
margin_left = 250.48
margin_top = 126.055
margin_right = 507.48
margin_bottom = 367.055
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader7" type="ColorRect" parent="."]
material = SubResource( 16 )
margin_left = 501.127
margin_top = 118.215
margin_right = 758.127
margin_bottom = 359.215
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader8" type="ColorRect" parent="."]
material = SubResource( 18 )
margin_left = 769.181
margin_top = 119.634
margin_right = 1026.18
margin_bottom = 360.634
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader9" type="ColorRect" parent="."]
material = SubResource( 20 )
margin_left = -2.46277
margin_top = 356.944
margin_right = 254.537
margin_bottom = 597.944
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader10" type="ColorRect" parent="."]
material = SubResource( 22 )
margin_left = 252.214
margin_top = 341.388
margin_right = 509.214
margin_bottom = 582.388
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader11" type="ColorRect" parent="."]
material = SubResource( 24 )
margin_left = 508.187
margin_top = 348.459
margin_right = 765.187
margin_bottom = 589.459
__meta__ = {
"_edit_use_anchors_": false
}
